<%- include("layouts/header.ejs", {title: "Skincare Shop - Products"}) %>

    <main class="container mx-auto p-4 md:p-8 lg:p-10 min-h-[75vh]">
        <header class="mb-8">
            <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-2">All Products</h1>
            <p class="text-gray-600 dark:text-gray-300">Browse our wide range of skincare products.</p>
        </header>

        <section id="productFilter" class="mb-8 flex items-center space-x-4">
            <label for="categoryFilter" class="text-gray-700 dark:text-gray-300 font-semibold">Filter by Category:</label>
            <div class="relative">
                <select id="categoryFilter" class="block appearance-none w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 py-2 px-3 pr-8 rounded leading-tight focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500">
                    <option value="">All Categories</option>
                    <!-- Categories will be loaded here by JavaScript -->
                </select>
                <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 dark:text-gray-300">
                    <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
                </div>
            </div>
        </section>

        <section id="productList" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            <!-- Product list will be loaded here by JavaScript -->
            <div class="text-center py-10">Loading products...</div>
        </section>
    </main>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productListContainer = document.getElementById('productList');
            const categoryFilterDropdown = document.getElementById('categoryFilter');

            const fetchProducts = async (category) => {
                let url = '/api/products';
                if (category) {
                    url += `?category=${category}`;
                }
                try {
                    const response = await fetch(url);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const products = await response.json();
                    displayProducts(products);
                } catch (error) {
                    console.error('Error fetching products:', error);
                    productListContainer.innerHTML = '<div class="text-center py-10">Failed to load products.</div>';
                }
            };

            const fetchCategories = async () => {
                try {
                    const response = await fetch('/api/categories');
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const categories = await response.json();
                    populateCategoryFilter(categories);
                } catch (error) {
                    console.error('Error fetching categories:', error);
                    // If category fetch fails, you might want to handle it gracefully, e.g., no category filter or a default list.
                }
            };


            const displayProducts = (products) => {
                productListContainer.innerHTML = ''; // Clear loading message
                if (products.length === 0) {
                    productListContainer.innerHTML = '<div class="text-center py-10 col-span-4">No products found in this category.</div>';
                    return;
                }
                products.forEach(product => {
                    const productCard = document.createElement('div');
                    productCard.classList.add('bg-white', 'dark:bg-gray-700', 'rounded-lg', 'shadow-md', 'overflow-hidden');
                    productCard.innerHTML = `
                        <a href="/product/${product.id}">
                            <img class="w-full h-48 object-cover" src="${product.product_images}" alt="${product.product_name}">
                            <div class="p-4">
                                <h3 class="font-semibold text-gray-800 dark:text-white">${product.product_name}</h3>
                                <p class="text-gray-600 dark:text-gray-300">â‚¦${product.price}</p>
                            </div>
                        </a>
                    `;
                    productListContainer.appendChild(productCard);
                });
            };

            const populateCategoryFilter = (categories) => {
                categories.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category.category_name.toLowerCase(); // Use lowercase for consistency in backend
                    option.textContent = category.category_name;
                    categoryFilterDropdown.appendChild(option);
                });
            };

            // Event listener for category filter dropdown change
            categoryFilterDropdown.addEventListener('change', function() {
                const selectedCategory = this.value;
                console.log(selectedCategory);
                fetchProducts(selectedCategory || null); // Pass null for 'All Categories'
            });


            fetchCategories(); // Fetch categories to populate the filter
            fetchProducts(null); // Fetch all products initially
        });
    </script>

<%- include("layouts/footer.ejs") %>